# Generated by Django 2.2 on 2021-09-15 14:13

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CoveragePipeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='上次修改时间', verbose_name='上次修改时间')),
                ('name', models.CharField(help_text='流水线名称', max_length=64, unique=True)),
                ('step1', models.CharField(blank=True, default='服务端发版', max_length=32, null=True)),
                ('step2', models.CharField(blank=True, default='覆盖率收集', max_length=32, null=True)),
                ('project_name', models.CharField(help_text='git工程名', max_length=32)),
                ('project_id', models.IntegerField(help_text='工程id', unique=True)),
                ('coverage_params', models.TextField(help_text='覆盖率收集job构建关键参数')),
                ('deploy_status', models.CharField(choices=[('pending', '待执行'), ('running', '执行中'), ('success', '成功'), ('fail', '失败')], default='pending', max_length=16)),
                ('coverage_status', models.CharField(choices=[('pending', '待执行'), ('running', '执行中'), ('success', '成功'), ('fail', '失败')], default='pending', max_length=16)),
                ('owner', models.CharField(blank=True, max_length=16, null=True)),
                ('mark', models.TextField(default='{"coverage": "", "deploy": ""}', help_text='备注')),
                ('notify_chat_ids', models.CharField(help_text='通知群', max_length=255)),
                ('deploy_id', models.IntegerField(default=None, help_text='Jenkins构建号', null=True)),
                ('sonar_id', models.IntegerField(default=None, help_text='Jenkins构建号', null=True)),
                ('sonar_job', models.CharField(default=None, help_text='Jenkins构建job', max_length=32, null=True)),
                ('sonar_status', models.CharField(choices=[('pending', '待执行'), ('running', '执行中'), ('success', '成功'), ('fail', '失败')], default='pending', help_text='sonar job构建状态', max_length=16)),
                ('recover_times', models.IntegerField(default=0, help_text='重试次数')),
                ('business', models.CharField(choices=[('trade', '交易中台'), ('omo', '增长中台'), ('reading', '呱呱阅读'), ('crm', 'Crm'), ('jlgl', '叽里呱啦'), ('data', '数仓/AI'), ('course', '课程中台')], default='jlgl', help_text='业务线', max_length=16)),
                ('terminal', models.CharField(choices=[('BE', '后端'), ('FE', '前端'), ('ME', '移动端')], default='BE', help_text='技术端', max_length=16)),
            ],
            options={
                'db_table': 'coverage_pipline',
            },
        ),
        migrations.CreateModel(
            name='CoverageServerDeployHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='上次修改时间', verbose_name='上次修改时间')),
                ('pipeline_id', models.IntegerField(help_text='所属流水线')),
                ('project_name', models.CharField(help_text='git工程名', max_length=32)),
                ('username', models.CharField(blank=True, help_text='触发者', max_length=64, null=True)),
                ('commit_id', models.CharField(help_text='当前构建分支', max_length=128)),
                ('build_id', models.IntegerField(help_text='Jenkins构建号', null=True)),
                ('job_name', models.CharField(help_text='fat 环境该服务的发版jobname', max_length=64)),
                ('status', models.CharField(choices=[('pending', '待执行'), ('running', '执行中'), ('success', '成功'), ('fail', '失败')], default='pending', max_length=16)),
                ('recover_times', models.IntegerField(default=0, help_text='重试次数')),
            ],
            options={
                'db_table': 'coverage_deploy_history',
            },
        ),
        migrations.CreateModel(
            name='DiffCoverage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='上次修改时间', verbose_name='上次修改时间')),
                ('project_id', models.IntegerField(help_text='工程id')),
                ('project_name', models.CharField(help_text='git工程名', max_length=32)),
                ('line_rate', models.DecimalField(decimal_places=2, help_text='行覆盖率', max_digits=18)),
                ('line_all', models.IntegerField(help_text='总行数')),
                ('line_cover', models.IntegerField(help_text='覆盖行数')),
                ('coverage_id', models.CharField(help_text='报告的uid', max_length=32)),
            ],
            options={
                'db_table': 'coverage_diff',
            },
        ),
        migrations.CreateModel(
            name='FullCoverage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='上次修改时间', verbose_name='上次修改时间')),
                ('project_id', models.IntegerField(help_text='工程id')),
                ('project_name', models.CharField(help_text='git工程名', max_length=32)),
                ('line_rate', models.DecimalField(decimal_places=2, help_text='行覆盖率', max_digits=18)),
                ('line_all', models.IntegerField(help_text='总行数')),
                ('line_cover', models.IntegerField(help_text='覆盖行数')),
                ('branch_rate', models.DecimalField(decimal_places=2, help_text='分支覆盖率', max_digits=18)),
                ('branch_all', models.IntegerField(help_text='总分支数')),
                ('branch_cover', models.IntegerField(help_text='覆盖分支数')),
                ('api_coverage', models.DecimalField(decimal_places=2, help_text='接口覆盖率', max_digits=18)),
                ('coverage_id', models.CharField(help_text='构建生成报告的uid', max_length=32)),
            ],
            options={
                'db_table': 'coverage_full',
            },
        ),
        migrations.CreateModel(
            name='GitProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='上次修改时间', verbose_name='上次修改时间')),
                ('name', models.CharField(help_text='git 工程名', max_length=32)),
                ('ssh_url', models.CharField(help_text='ssh git clone url', max_length=255, unique=True)),
                ('server_ip', models.CharField(help_text='jacocoagent tcpserver ip', max_length=16)),
                ('server_port', models.CharField(help_text='jacocoagent tcpserver port', max_length=16)),
                ('fat_job_name', models.CharField(help_text='fat 环境该服务的发版jobname', max_length=64)),
            ],
            options={
                'db_table': 'coverage_git_project',
            },
        ),
        migrations.CreateModel(
            name='JenkinsBuildTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='上次修改时间', verbose_name='上次修改时间')),
                ('build_number', models.IntegerField(help_text='jenkins build number', null=True)),
                ('coverage_job_name', models.CharField(default='test/coverage', help_text='覆盖率构建job', max_length=64, null=True)),
                ('build_status', models.CharField(choices=[('pending', '待执行'), ('running', '执行中'), ('success', '成功'), ('fail', '失败')], default='pending', help_text='jenkins 构建状态', max_length=16)),
                ('project_git', models.CharField(help_text='工程git地址后缀', max_length=255)),
                ('end_commit', models.CharField(help_text='当前分支', max_length=128)),
                ('compare_branch', models.CharField(default='origin/master', help_text='对比分支', max_length=16)),
                ('pipeline_id', models.IntegerField(help_text='所属流水线')),
                ('pipeline_name', models.CharField(blank=True, help_text='流水线名称', max_length=64, null=True)),
                ('username', models.CharField(blank=True, help_text='触发者', max_length=64, null=True)),
                ('diff_coverage_report', models.CharField(blank=True, help_text='增量覆盖率报告url', max_length=128, null=True)),
                ('full_coverage_report', models.CharField(blank=True, help_text='全量覆盖率报告url', max_length=128, null=True)),
                ('recover_times', models.IntegerField(default=0, help_text='重试次数')),
            ],
            options={
                'db_table': 'coverage_jenkins_build',
            },
        ),
        migrations.CreateModel(
            name='JenkinsProjectCommit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='上次修改时间', verbose_name='上次修改时间')),
                ('short_commit', models.CharField(help_text='jenkins的commit', max_length=16)),
                ('project_name', models.CharField(help_text='git工程名', max_length=32)),
                ('project_id', models.IntegerField(help_text='工程id', null=True)),
            ],
            options={
                'db_table': 'coverage_jenkins_project_commit',
            },
        ),
    ]
