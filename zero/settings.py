"""
Django settings for zero project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from zero.config.log_conf import log_conf
import datetime
import mongoengine

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '3yd2!za*=z7we@clpip@!s869cl7nda3az33=m=pp(7hdp9*qn'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

IS_PROD = os.getenv('prod', False)

if IS_PROD:
    DEBUG = False
    from zero.config.settings_prod import *

else:
    from zero.config.settings_local import *

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    # 'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework.authtoken',
    'gunicorn',
    'rest_framework',
    'zero.testTrack',
    'zero.api',
    'zero.jira',
    'zero.mock',
    'zero.user',
    'django_celery_beat',
    'zero.warehouse',
    'zero.lesson_central',
    'zero.coverage',
    'zero.auto',
    'zero.dataTool',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'zero.libs.middleware.ApiLoggingMiddleware',
]

ROOT_URLCONF = 'zero.urls'
# LOGIN_URL = (r'^accounts/login/$', 'django.contrib.auth.views.login')

# for CORS settings 前端dashboard需要跨域请求
CORS_ORIGIN_ALLOW_ALL = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'zero.wsgi.application'

# restframework
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
}

# jwt载荷中的有效期设置
JWT_AUTH = {
    # token 有效期
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=7),
    'JWT_ALLOW_REFRESH': True,
    # 续期有效期（该设置可在24小时内带未失效的token 进行续期）
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(hours=24),
    # 自定义返回格式，需要手工创建
    'JWT_RESPONSE_PAYLOAD_HANDLER': 'zero.libs.middleware.jwt_response_payload_handler',
}

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
DATABASES.update({
    'jira': {
        'ENGINE': 'django_mysql_geventpool.backends.mysql',
        'HOST': 'jira.mysql.jlgltech.com',
        'USER': 'root',
        'PASSWORD': '123456',
        'PORT': '3306',
        'NAME': 'jira',
        'OPTIONS': {'MAX_CONNS': 20, 'MAX_LIFETIME': 28790}
    },
    'ace': {
        'ENGINE': 'django_mysql_geventpool.backends.mysql',
        'HOST': 'jira.mysql.jlgltech.com',
        'USER': 'root',
        'PASSWORD': '123456',
        'PORT': '3306',
        'NAME': 'ace',
        'OPTIONS': {'MAX_CONNS': 20, 'MAX_LIFETIME': 28790}
    }
    # 'jira': {
    #     'ENGINE': 'django_mysql_geventpool.backends.mysql',
    #     'HOST': '172.31.112.6',
    #     'USER': 'root',
    #     'PASSWORD': '123456',
    #     'PORT': '3306',
    #     'NAME': 'jira',
    #     'OPTIONS': {'MAX_CONNS': 20, 'MAX_LIFETIME': 28790}
    # },
    # 'ace': {
    #     'ENGINE': 'django_mysql_geventpool.backends.mysql',
    #     'HOST': '172.31.112.6',
    #     'USER': 'root',
    #     'PASSWORD': '123456',
    #     'PORT': '3306',
    #     'NAME': 'ace',
    #     'OPTIONS': {'MAX_CONNS': 20, 'MAX_LIFETIME': 28790}
    # }
})
DATABASE_ROUTERS = ['zero.database_router.DatabaseAppsRouter']
DATABASE_APPS_MAPPING = {
    'zero.jira': 'jira',
    'zero.organization': 'ace'
}

SILENCED_SYSTEM_CHECKS = ["fields.E340"]
# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Shanghai'
USE_I18N = True
USE_L10N = True
USE_TZ = False

# redis 用处
NEW_REDIS_ACCESS = {

    'cache': {
        'host': DEFAULT_REDIS_HOST,
        'port': DEFAULT_REDIS_PORT,
        'db': 1,
    }
}

# celery
# Timezone
DJANGO_CELERY_BEAT_TZ_AWARE = False
CELERY_ENABLE_UTC = False
CELERY_TIMEZONE = "Asia/Shanghai"
# https://github.com/celery/celery/issues/4817
CELERY_BROKER_HEARTBEAT = 0
# Result: 默认不过期
CELERY_RESULT_EXPIRES = 60
# Timeout: 所有任务不得超过10分钟
CELERY_TASK_SOFT_TIME_LIMIT = 60 * 10
# 任务返回后才会从队列拿走
CELERY_ACKS_LATE = True
CELERY_TRACK_STARTED = True

# 测试库连接
# dev环境
JLGL_DEV_MONGO = {'db': 'JLGL',
                  'host': f'mongodb://JLAdmin:niuniuniu168@10.100.128.122:27017/JLGL?authSource=admin&authMechanism=SCRAM-SHA-1'}
XSHARE_DEV_MONGO = {'db': 'XSHARE',
                    'host': f'mongodb://JLAdmin:niuniuniu168@10.100.128.122:27017/XSHARE?authSource=admin&authMechanism=SCRAM-SHA-1'}
# fat环境
JLGL_FAT_MONGO = {'db': 'JLGL',
                  'host': f'mongodb://JLAdmin:niuniuniu168@10.100.128.122:27017/JLGL?authSource=admin&authMechanism=SCRAM-SHA-1'}
XSHARE_FAT_MONGO = {'db': 'XSHARE',
                    'host': f'mongodb://JLAdmin:niuniuniu168@10.100.128.122:27017/XSHARE?authSource=admin&authMechanism=SCRAM-SHA-1'}
# mongo连接
MONGO_CONFIG = {'db': MONGO_DB, 'host': MONGO_CONN}
# 测试服务mongo
JLGL_FAT_MONGO.update(socketTimeoutMS=5000, connectTimeoutMS=5000, serverSelectionTimeoutMS=5000)
XSHARE_FAT_MONGO.update(socketTimeoutMS=5000, connectTimeoutMS=5000, serverSelectionTimeoutMS=5000)
JLGL_DEV_MONGO.update(socketTimeoutMS=5000, connectTimeoutMS=5000, serverSelectionTimeoutMS=5000)
XSHARE_DEV_MONGO.update(socketTimeoutMS=5000, connectTimeoutMS=5000, serverSelectionTimeoutMS=5000)
MONGO_CONFIG.update(socketTimeoutMS=5000, connectTimeoutMS=5000, serverSelectionTimeoutMS=5000)

mongoengine.connect(alias='default', **MONGO_CONFIG)
mongoengine.connect(alias='jlgl_dev', **JLGL_DEV_MONGO)
mongoengine.connect(alias='xshare_dev', **XSHARE_DEV_MONGO)
mongoengine.connect(alias='jlgl_fat', **JLGL_FAT_MONGO)
mongoengine.connect(alias='xshare_fat', **XSHARE_FAT_MONGO)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

LOGGING = log_conf

# jira相关
BASE_JIRA_URL = 'http://jira.jiliguala.com'
JIRA_USER = 'ace_bot'
JIRA_PASSWORD = 'Admin!@#$'

# jenkins相关
BASE_JENKINS_URL = 'http://jenkins-ops.jlgltech.com'
# JENKINS_USER = 'zoey_zhang'
# JENKINS_APITOKEN = '1196b02daa22959b51f47d371aee1969f9'
JENKINS_USER = 'jason'
JENKINS_APITOKEN = '119113709fa1a64e9b6302f434138f876e'
BASE_COVER_URL = 'http://qacover.jlgltech.com'

# gitlab 相关
BASE_GIT_URL = 'https://gitlab.jiliguala.com'
GIT_USER = 'qa_bot'
GIT_EMAIL = 'qa_develop@jiliguala.com'
GIT_APITOKEN = 'Ju_34b8bLgXuzRFKqHWT'

# sonar相关
SONAR_URL = 'http://sonar.jlgltech.com'

# 企微群机器人
OPS_ALERT_ROBOT_WEBHOOK = 'https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=e0f7c4d9-dfa8-46de-b931-2475c4ffe88b'
